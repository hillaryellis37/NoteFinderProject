from math import log2, powimport numpy as npfrom music21 import chord as chA4 = 440C0 = A4 * pow(2, -4.75)name = ["C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#", "B"]class Note:    def __init__(self, name=name, A4=440, C0=C0):        self.name = name        self.A4 = A4        self.C0 = C0    #inputs a frequency and converts to a note:    def pitch(self, freq):        h = round(12 * log2(freq / self.C0))        octave = h // 12        n = h % 12        note = self.name[n] + str(octave)        return note    def note_to_freq(self, note):        all_freq = []        note_index = self.name.index(note[:-1])        for i in range(10):            note_num = note_index + 12 * i            freq = self.C0 * 2 ** (note_num / 12)            all_freq.append(round(freq))        return all_freq    # inputs a note and outs the frequency range of that note's octave:    def note_to_freq_range(self, note):        octave = int(note[-1])        note_index = self.name.index(note[:-1])        note_num = note_index + 12 * octave        low_note = note_num - 0.5        high_note = note_num + 0.5        freq_low = self.C0 * 2 ** (low_note / 12)        freq_high = self.C0 * 2 ** (high_note / 12)        return np.array([freq_low, freq_high])    # inputs a note and outs the frequency ranges of all the note's octaves:    def note_to_all_freq_harmonics(self, note):        note = note[:-1]        all_freq_harm = np.empty([10,2])        for i in range(10):            octave = note + str(i)            x, y = self.note_to_freq_range(octave)            all_freq_harm[i] = x, y        return all_freq_harm    def chord(self, notes):        chord = ch.Chord(notes)        return chord.pitchedCommonName    def run(self, input_freq):        note = self.pitch(input_freq)        freq_range_single = self.note_to_freq_range(note)        freq_range_all = self.note_to_all_freq_harmonics(note)        freq_harm = self.note_to_freq(note)        print("the note is {} ".format(note))        return note, freq_range_single, freq_range_all, freq_harm